<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache.xsd">
	<context:component-scan base-package="com.guozz.spring_cache.service" />
	<context:annotation-config />
	
	<!-- 开启缓存支持 -->
	<cache:annotation-driven />
	
	<!-- 这个配置项缺省使用了一个名字叫 cacheManager 的缓存管理器，这个缓存管理器有一个 spring 的缺省实现，
	即 org.springframework.cache.support.SimpleCacheManager，这个缓存管理器实现了我们刚刚自定义的缓存管理器的逻辑，
	它需要配置一个属性 caches，即此缓存管理器管理的缓存集合，除了缺省的名字叫 default 的缓存，
	我们还自定义了一个名字叫 accountCache 的缓存，使用了缺省的内存存储方案 ConcurrentMapCacheFactoryBean，
	它是基于 java.util.concurrent.ConcurrentHashMap 的一个内存缓存实现方案。 -->
	<bean id="cacheManager" class="com.guozz.spring_cache.manager.MyCacheManager">
		<property name="caches">
			<set>
				<bean	class="com.guozz.spring_cache.manager.MyCache" p:name="accountCache" />
			</set>
		</property>
	</bean>
</beans>